#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Amplitude
"""

import asyncio
import os
import sys
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –±–æ—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from bot.services.analytics_service import AnalyticsService
from bot.config import ANALYTICS

async def test_amplitude_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Amplitude"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Amplitude...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print(f"üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:")
    print(f"   - –í–∫–ª—é—á–µ–Ω–∞: {ANALYTICS.get('enabled', False)}")
    print(f"   - API Key: {'‚úÖ' if os.getenv('AMPLITUDE_API_KEY') else '‚ùå'}")
    print(f"   - Secret Key: {'‚úÖ' if os.getenv('AMPLITUDE_SECRET_KEY') else '‚ùå'}")
    print(f"   - Project ID: {'‚úÖ' if os.getenv('AMPLITUDE_PROJECT_ID') else '‚ùå'}")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    analytics = AnalyticsService()
    
    if not analytics.enabled:
        print("‚ùå –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        return
    
    print("‚úÖ –°–µ—Ä–≤–∏—Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
    test_user_id = 123456789
    
    print("\nüìä –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π...")
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
    print("   - –¢–µ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è...")
    await analytics.track_user_action(
        user_id=test_user_id,
        action="test_action",
        context={"test": True, "message": "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ"}
    )
    
    # –¢–µ—Å—Ç 2: API –≤—ã–∑–æ–≤
    print("   - –¢–µ—Å—Ç API –≤—ã–∑–æ–≤–∞...")
    await analytics.track_api_call(
        user_id=test_user_id,
        api_name="test_api",
        success=True,
        response_time=1.5
    )
    
    # –¢–µ—Å—Ç 3: –û—à–∏–±–∫–∞
    print("   - –¢–µ—Å—Ç –æ—à–∏–±–∫–∏...")
    await analytics.track_error(
        user_id=test_user_id,
        error_type="test_error",
        error_message="–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞",
        context={"test": True}
    )
    
    # –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ —Ä–µ–π—Å–∞
    print("   - –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ —Ä–µ–π—Å–∞...")
    await analytics.track_flight_search(
        user_id=test_user_id,
        flight_number="SU100",
        date="2024-01-15",
        success=True,
        response_time=2.1
    )
    
    # –¢–µ—Å—Ç 5: –ü–æ–¥–ø–∏—Å–∫–∞
    print("   - –¢–µ—Å—Ç –ø–æ–¥–ø–∏—Å–∫–∏...")
    await analytics.track_subscription(
        user_id=test_user_id,
        action="subscribe",
        flight_number="SU100",
        date="2024-01-15"
    )
    
    # –¢–µ—Å—Ç 6: –ü–µ—Ä–≤—ã–π/–ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥
    print("   - –¢–µ—Å—Ç –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞...")
    await analytics.track_user_session(
        user_id=test_user_id,
        username="test_user",
        is_first_time=True
    )
    
    print("   - –¢–µ—Å—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—Ö–æ–¥–∞...")
    await analytics.track_user_session(
        user_id=test_user_id,
        username="test_user",
        is_first_time=False,
        session_duration=300.5
    )
    
    # –¢–µ—Å—Ç 7: –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ
    print("   - –¢–µ—Å—Ç –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ...")
    await analytics.track_button_click(
        user_id=test_user_id,
        button_name="subscribe",
        button_context={"flight_number": "SU100", "date": "2024-01-15"}
    )
    
    # –¢–µ—Å—Ç 8: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    print("   - –¢–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã...")
    await analytics.track_command_usage(
        user_id=test_user_id,
        command="/start",
        context={"username": "test_user"}
    )
    
    # –¢–µ—Å—Ç 9: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    print("   - –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è...")
    await analytics.track_message_received(
        user_id=test_user_id,
        message_type="text",
        message_length=50,
        context={"contains_flight_number": True}
    )
    
    # –¢–µ—Å—Ç 10: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    print("   - –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")
    await analytics.track_notification_sent(
        user_id=test_user_id,
        notification_type="flight_update",
        flight_number="SU100",
        context={"status": "delayed"}
    )
    
    # –¢–µ—Å—Ç 11: –í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("   - –¢–µ—Å—Ç –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏...")
    await analytics.track_user_engagement(
        user_id=test_user_id,
        engagement_type="high",
        session_actions=15,
        session_duration=600.0,
        context={"features_used": ["search", "subscribe"]}
    )
    
    # –¢–µ—Å—Ç 12: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
    print("   - –¢–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏...")
    await analytics.track_feature_usage(
        user_id=test_user_id,
        feature_name="flight_search",
        feature_context={"search_count": 5}
    )
    
    # –¢–µ—Å—Ç 13: –ö–æ–Ω–≤–µ—Ä—Å–∏—è
    print("   - –¢–µ—Å—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–∏...")
    await analytics.track_conversion(
        user_id=test_user_id,
        conversion_type="subscription",
        conversion_value=1.0,
        context={"flight_number": "SU100", "date": "2024-01-15"}
    )
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏–π
    print("\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏–π –≤ Amplitude...")
    await analytics.flush()
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –ß—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ Amplitude:")
    print("   1. –ó–∞–π–¥–∏—Ç–µ –≤ –ø—Ä–æ–µ–∫—Ç Amplitude")
    print("   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª 'Events'")
    print("   3. –ù–∞–π–¥–∏—Ç–µ —Å–æ–±—ã—Ç–∏—è:")
    print("      - user_action_test_action")
    print("      - api_call")
    print("      - error")
    print("      - flight_search")
    print("      - subscription")
    print("      - user_first_visit")
    print("      - user_return_visit")
    print("      - button_click")
    print("      - command_used")
    print("      - message_received")
    print("      - notification_sent")
    print("      - user_engagement")
    print("      - feature_used")
    print("      - conversion")
    
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å
    await analytics.shutdown()

async def test_amplitude_config():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Amplitude"""
    
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    required_vars = [
        'AMPLITUDE_API_KEY',
        'AMPLITUDE_SECRET_KEY', 
        'AMPLITUDE_PROJECT_ID'
    ]
    
    missing_vars = []
    for var in required_vars:
        if not os.getenv(var):
            missing_vars.append(var)
    
    if missing_vars:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {', '.join(missing_vars)}")
        print("–î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ —Ñ–∞–π–ª .env:")
        for var in missing_vars:
            print(f"   {var}=your_value_here")
    else:
        print("‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if not ANALYTICS.get('enabled'):
        print("‚ùå –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    else:
        print("‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Amplitude")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    asyncio.run(test_amplitude_config())
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
    asyncio.run(test_amplitude_integration())

if __name__ == "__main__":
    main() 